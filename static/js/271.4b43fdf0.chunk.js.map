{"version":3,"file":"static/js/271.4b43fdf0.chunk.js","mappings":"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","sources":["components/Phonebook/Phonebook.styled.tsx","components/Phonebook/PhonebookForm.tsx","components/Phonebook/PhonebookModal.tsx","components/Phonebook/PhonebookItem.tsx","components/Phonebook/PhonebookList.tsx","components/Phonebook/PhonebookFilter.tsx","pages/Phonebook.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Form } from \"formik\";\r\n\r\nexport const PhonebookWrap = styled.div`\r\n  border: solid #000000 1px;\r\n  width: 700px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 16px;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  label {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 32px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    padding-left: 32px;\r\n    margin: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 16px;\r\n\r\n    li {\r\n      width: 100%;\r\n      hr {\r\n        margin: 0;\r\n      }\r\n      div {\r\n        width: 100%;\r\n        padding-top: 16px;\r\n        font-size: 32px;\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-direction: row;\r\n        gap: 16px;\r\n        align-items: center;\r\n      }\r\n    }\r\n  }\r\n  p {\r\n    padding: 0;\r\n\r\n    margin: 0;\r\n\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nexport const Forms = styled(Form)`\r\n  border: solid #000000 1px;\r\n\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 16px;\r\n  padding: 16px;\r\n  overflow: hidden;\r\n  label {\r\n    font-size: 24px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n    align-items: flex-start;\r\n  }\r\n  button {\r\n    border: solid #000000 1px;\r\n    background-color: #ffffff;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n    padding: 8px;\r\n\r\n    :active {\r\n      background-color: \"#E7ECF2\";\r\n    }\r\n  }\r\n  input {\r\n    font-size: 24px;\r\n    width: 400px;\r\n    height: 32px;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 16px;\r\n  span {\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\nexport const FormsWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  gap: 16px;\r\n  @media screen and (max-width: 500px) {\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    flex-direction: column-reverse;\r\n  }\r\n  input::placeholder {\r\n    color: black;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input, Modal } from \"antd\";\r\nimport { ButtonWrap } from \"./Phonebook.styled\";\r\nimport { useAddContactsMutation } from \"redux/contacts/contactsSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IData } from \"Type/dataType\";\r\nimport { IFormValue } from \"Type/FormType\";\r\n\r\nexport const PhonebookForm: React.FC<{ data: IData[] }> = ({ data }) => {\r\n  const [form] = Form.useForm();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [postContatct, { isSuccess, isError }] = useAddContactsMutation();\r\n\r\n  const toogleModal = () => {\r\n    setIsModalOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const onFinish = (values: IFormValue) => {\r\n    toogleModal();\r\n    form.resetFields();\r\n    if (\r\n      data.some((el) =>\r\n        values.name.toLowerCase().includes(el.name.toLowerCase())\r\n      )\r\n    ) {\r\n      toast.error(`${values.name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      postContatct(values);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      toast.error(\"Fail\");\r\n    }\r\n  }, [isError]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(\"Success\");\r\n    }\r\n  }, [isSuccess]);\r\n\r\n  return (\r\n    <>\r\n      <ButtonWrap>\r\n        <span>Add contact</span>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ backgroundColor: \"#4BB543\" }}\r\n          icon={<PlusOutlined />}\r\n          size=\"large\"\r\n          onClick={toogleModal}\r\n        />\r\n      </ButtonWrap>\r\n      <Modal\r\n        title={<h3 style={{ textAlign: \"center\" }}>Add contact</h3>}\r\n        open={isModalOpen}\r\n        onOk={toogleModal}\r\n        onCancel={toogleModal}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form}\r\n          name=\"create\"\r\n          labelCol={{ span: 4 }}\r\n          style={{ maxWidth: 600 }}\r\n          initialValues={{ name: \"\", number: \"\" }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[\r\n              { required: true, message: \"\" },\r\n              {\r\n                validator: async (_, names) => {\r\n                  if (!names) {\r\n                    return Promise.reject(new Error(\"Please input your Name!\"));\r\n                  } else if (\r\n                    names.trim().length < 6 ||\r\n                    names.trim().length > 10\r\n                  ) {\r\n                    return Promise.reject(\r\n                      new Error(\r\n                        \"Please input your Name! (Min is 6 & Max is 10)\"\r\n                      )\r\n                    );\r\n                  }\r\n                },\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Number\"\r\n            name=\"number\"\r\n            rules={[\r\n              { required: true, message: \"\" },\r\n              {\r\n                validator: async (_, number) => {\r\n                  if (!number) {\r\n                    return Promise.reject(\r\n                      new Error(\"Please input your Number!\")\r\n                    );\r\n                  } else if (\r\n                    number.trim().length < 6 ||\r\n                    number.trim().length > 10\r\n                  ) {\r\n                    return Promise.reject(\r\n                      new Error(\r\n                        \"Please input your Number! (Min is 6 & Max is 10)\"\r\n                      )\r\n                    );\r\n                  }\r\n                },\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 10, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Form, Input, Modal } from \"antd\";\r\nimport { useEditContactsMutation } from \"redux/contacts/contactsSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IData } from \"Type/dataType\";\r\nimport { IFormValue } from \"Type/FormType\";\r\n\r\nexport const PhonebookModal: React.FC<{\r\n  open: boolean;\r\n  toogleModal: () => void;\r\n  name: string;\r\n  number: string;\r\n  id: string;\r\n  data: IData[];\r\n}> = ({ open, toogleModal, id, name, number, data }) => {\r\n  const [form] = Form.useForm();\r\n  const [editContatctById, { isError, isSuccess }] = useEditContactsMutation();\r\n  const onFinish = (values: IFormValue) => {\r\n    toogleModal();\r\n\r\n    if (\r\n      data.some(\r\n        (el) =>\r\n          values.name.toLowerCase().includes(el.name.toLowerCase()) &&\r\n          values.number.toLowerCase().includes(el.number.toLowerCase())\r\n      )\r\n    ) {\r\n      toast.error(`${values.name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      editContatctById({ id, values });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      toast.error(\"Fail\");\r\n    }\r\n  }, [isError]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(\"Success\");\r\n    }\r\n  }, [isSuccess]);\r\n\r\n  return (\r\n    <Modal\r\n      title={<h3 style={{ textAlign: \"center\" }}>Edit contact</h3>}\r\n      open={open}\r\n      onOk={toogleModal}\r\n      onCancel={toogleModal}\r\n      footer={null}\r\n    >\r\n      <Form\r\n        form={form}\r\n        name={`edit ${id}`}\r\n        labelCol={{ span: 4 }}\r\n        style={{ maxWidth: 600 }}\r\n        initialValues={{ name: `${name}`, number: `${number}` }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={() => form.resetFields}\r\n      >\r\n        <Form.Item\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: \"\" },\r\n            {\r\n              validator: async (_, names) => {\r\n                if (!names) {\r\n                  return Promise.reject(new Error(\"Please input your Name!\"));\r\n                } else if (\r\n                  names.trim().length < 6 ||\r\n                  names.trim().length > 10\r\n                ) {\r\n                  return Promise.reject(\r\n                    new Error(\"Please input your Name! (Min is 6 & Max is 10)\")\r\n                  );\r\n                }\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Number\"\r\n          name=\"number\"\r\n          rules={[\r\n            { required: true, message: \"\" },\r\n            {\r\n              validator: async (_, number) => {\r\n                if (!number) {\r\n                  return Promise.reject(new Error(\"Please input your Number!\"));\r\n                } else if (\r\n                  number.trim().length < 6 ||\r\n                  number.trim().length > 10\r\n                ) {\r\n                  return Promise.reject(\r\n                    new Error(\r\n                      \"Please input your Number! (Min is 6 & Max is 10)\"\r\n                    )\r\n                  );\r\n                }\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 10, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"antd\";\r\nimport { useDeleteContactsMutation } from \"redux/contacts/contactsSlice\";\r\nimport { PhonebookModal } from \"./PhonebookModal\";\r\nimport { IData } from \"Type/dataType\";\r\n\r\nexport const PhonebookItem: React.FC<{\r\n  name: string;\r\n  number: string;\r\n  id: string;\r\n  data: IData[];\r\n}> = ({ name, number, id, data }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [deleteContatctById, { isLoading, isSuccess, isError }] =\r\n    useDeleteContactsMutation();\r\n\r\n  const toogleModal = () => {\r\n    setIsModalOpen((prevState) => !prevState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      toast.error(\"Fail\");\r\n    }\r\n  }, [isError]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(\"Success\");\r\n    }\r\n  }, [isSuccess]);\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        <hr />\r\n        <div>\r\n          {name}: {number}\r\n          <Button\r\n            style={{ marginLeft: \"auto\" }}\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            size=\"large\"\r\n            onClick={toogleModal}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              deleteContatctById(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </li>\r\n      <PhonebookModal\r\n        open={isModalOpen}\r\n        toogleModal={toogleModal}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        data={data}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { PhonebookItem } from \"./PhonebookItem\";\r\nimport { RootState } from \"redux/store\";\r\nimport { IData } from \"Type/dataType\";\r\nimport { FetchBaseQueryError } from \"@reduxjs/toolkit/dist/query\";\r\nimport { SerializedError } from \"@reduxjs/toolkit\";\r\n\r\nexport const PhonebookList: React.FC<{\r\n  data: IData[];\r\n  isLoading: boolean;\r\n  error: FetchBaseQueryError | SerializedError | undefined;\r\n}> = ({ data, isLoading, error }) => {\r\n  const filter = useSelector((state: RootState) => state.filter);\r\n\r\n  const visibleContacts = () => {\r\n    return [...data].filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const errorHandle = () => {\r\n    if (error && \"error\" in error) {\r\n      console.log(error);\r\n\r\n      toast.error(error.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <BeatLoader\r\n          cssOverride={{\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        />\r\n      )}\r\n      {data && !isLoading && (\r\n        <ul style={{ width: \"100%\", padding: 0 }}>\r\n          {visibleContacts().map(({ name, number, id }) => (\r\n            <PhonebookItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              data={data}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {errorHandle()}\r\n    </>\r\n  );\r\n};\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"redux/filterSlice\";\r\nimport { Input } from \"antd\";\r\nimport { RootState } from \"redux/store\";\r\n\r\nexport const PhonebookFilter: React.FC = () => {\r\n  const state = useSelector((state: RootState) => state.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      placeholder=\"Find contacts by name\"\r\n      value={state}\r\n      style={{ maxWidth: 200 }}\r\n      onChange={(e) => dispatch(changeFilter({ value: e.target.value }))}\r\n    />\r\n  );\r\n};\r\n","import { PhonebookForm } from \"components/Phonebook/PhonebookForm\";\r\nimport { PhonebookList } from \"components/Phonebook/PhonebookList\";\r\nimport { PhonebookFilter } from \"components/Phonebook/PhonebookFilter\";\r\nimport {\r\n  PhonebookWrap,\r\n  FormsWrap,\r\n} from \"components/Phonebook/Phonebook.styled\";\r\nimport { useGetContactsQuery } from \"redux/contacts/contactsSlice\";\r\nimport React from \"react\";\r\n\r\nconst Phonebook: React.FC = () => {\r\n  const { data, isLoading, error } = useGetContactsQuery(null);\r\n\r\n  return (\r\n    <PhonebookWrap>\r\n      <h2>Phonebook</h2>\r\n      <FormsWrap>\r\n        <PhonebookFilter /> <PhonebookForm data={data} />\r\n      </FormsWrap>\r\n      <PhonebookList data={data} isLoading={isLoading} error={error} />\r\n    </PhonebookWrap>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n"],"names":["PhonebookWrap","styled","div","_templateObject","_taggedTemplateLiteral","ButtonWrap","Form","_templateObject2","_templateObject3","FormsWrap","_templateObject4","PhonebookForm","_ref","data","_Form$useForm","useForm","form","_slicedToArray","_useState","useState","_useState2","isModalOpen","setIsModalOpen","_useAddContactsMutati","useAddContactsMutation","_useAddContactsMutati2","postContatct","_useAddContactsMutati3","isSuccess","isError","toogleModal","prevState","useEffect","toast","error","success","_jsxs","_Fragment","children","_jsx","Button","type","style","backgroundColor","icon","PlusOutlined","size","onClick","Modal","title","textAlign","open","onOk","onCancel","footer","name","labelCol","span","maxWidth","initialValues","number","onFinish","values","resetFields","some","el","toLowerCase","includes","concat","Item","label","rules","required","message","validator","_validator","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","names","wrap","_context","prev","next","abrupt","Promise","reject","Error","trim","length","stop","_x","_x2","apply","arguments","Input","_validator2","_callee2","_context2","_x3","_x4","wrapperCol","offset","htmlType","PhonebookModal","id","_useEditContactsMutat","useEditContactsMutation","_useEditContactsMutat2","editContatctById","_useEditContactsMutat3","onFinishFailed","PhonebookItem","_useDeleteContactsMut","useDeleteContactsMutation","_useDeleteContactsMut2","deleteContatctById","_useDeleteContactsMut3","isLoading","marginLeft","loading","disabled","PhonebookList","filter","useSelector","state","BeatLoader","cssOverride","marginRight","width","padding","_toConsumableArray","_ref2","map","_ref3","console","log","PhonebookFilter","dispatch","useDispatch","placeholder","value","onChange","e","changeFilter","target","_useGetContactsQuery","useGetContactsQuery"],"sourceRoot":""}