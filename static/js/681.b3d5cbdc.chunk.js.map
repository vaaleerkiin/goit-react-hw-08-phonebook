{"version":3,"file":"static/js/681.b3d5cbdc.chunk.js","mappings":"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","sources":["components/Containers/Container.styled.tsx","components/Containers/Container.tsx","components/Register/RegisterForm.tsx","pages/Register.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.section`\n  border: solid #000000 1px;\n  max-width: 500px;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 16px;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n","import React from \"react\";\n\nimport { Container } from \"components/Containers/Container.styled\";\nexport const Containers: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => <Container>{children}</Container>;\n","import { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Button, Form, Input } from \"antd\";\nimport { useRegisterMutation } from \"redux/Auth/operations\";\nimport { IUser } from \"Type&Intarface/IUser\";\n\nexport const RegisterForm: React.FC = () => {\n  const [postRegister, { isUninitialized, isSuccess, isError }] =\n    useRegisterMutation();\n\n  const onFinish = (values: IUser) => {\n    postRegister(values);\n  };\n\n  useEffect(() => {\n    if (!isUninitialized && isError) {\n      toast.error(\"Fail\");\n    }\n  }, [isError, isUninitialized]);\n\n  useEffect(() => {\n    if (!isUninitialized && isSuccess) {\n      toast.success(\"Success\");\n    }\n  }, [isSuccess, isUninitialized]);\n\n  return (\n    <>\n      <h1>Register</h1>\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 4 }}\n        style={{ width: \"100%\" }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"\" },\n            {\n              validator: async (_, names) => {\n                if (!names) {\n                  return Promise.reject(\n                    new Error(\"Please input your username!\")\n                  );\n                } else if (names.trim().length < 6) {\n                  return Promise.reject(\n                    new Error(\"Please input your username! (Min is 6)\")\n                  );\n                }\n              },\n            },\n          ]}\n        >\n          <Input autoFocus />\n        </Form.Item>\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            { required: true, message: \"\" },\n            {\n              validator: async (_, mail) => {\n                if (!mail) {\n                  return Promise.reject(new Error(\"Please input your mail!\"));\n                } else if (mail.trim().length < 8) {\n                  return Promise.reject(\n                    new Error(\"Please input your mail! (Min is 8)\")\n                  );\n                }\n              },\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            { required: true, message: \"\" },\n            {\n              validator: async (_, password) => {\n                if (!password) {\n                  return Promise.reject(\n                    new Error(\"Please input your password!\")\n                  );\n                } else if (password.trim().length < 6) {\n                  return Promise.reject(\n                    new Error(\"Please input your password! (Min is 8)\")\n                  );\n                }\n              },\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 10, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n","import { Containers } from \"components/Containers/Container\";\nimport { RegisterForm } from \"components/Register/RegisterForm\";\n\nconst Register: React.FC = () => {\n  return (\n    <Containers>\n      <RegisterForm />\n    </Containers>\n  );\n};\n\nexport default Register;\n"],"names":["Container","styled","section","_templateObject","_taggedTemplateLiteral","Containers","_ref","children","_jsx","RegisterForm","_useRegisterMutation","useRegisterMutation","_useRegisterMutation2","_slicedToArray","postRegister","_useRegisterMutation3","isUninitialized","isSuccess","isError","useEffect","toast","error","success","_jsxs","_Fragment","Form","name","labelCol","span","style","width","initialValues","remember","onFinish","values","Item","label","rules","required","message","validator","_validator","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","names","wrap","_context","prev","next","abrupt","Promise","reject","Error","trim","length","stop","_x","_x2","apply","arguments","Input","autoFocus","_validator2","_callee2","mail","_context2","_x3","_x4","_validator3","_callee3","password","_context3","_x5","_x6","Password","wrapperCol","offset","Button","type","htmlType","size"],"sourceRoot":""}