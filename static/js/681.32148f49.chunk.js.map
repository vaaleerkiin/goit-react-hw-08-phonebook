{"version":3,"file":"static/js/681.32148f49.chunk.js","mappings":"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","sources":["components/Containers/Container.styled.tsx","components/Containers/Container.tsx","components/Register/RegisterForm.tsx","pages/Register.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.section`\r\n  border: solid #000000 1px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 16px;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"components/Containers/Container.styled\";\r\nexport const Containers: React.FC<{ children: React.ReactNode }> = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => <Container>{children}</Container>;\r\n","import { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useRegisterMutation } from \"redux/Auth/operations\";\r\nimport { IFormValue } from \"Type/FormType\";\r\n\r\nexport const RegisterForm: React.FC = () => {\r\n  const [postRegister, { isUninitialized, isSuccess, isError }] =\r\n    useRegisterMutation();\r\n\r\n  const onFinish = (values: IFormValue) => {\r\n    postRegister(values);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isUninitialized && isError) {\r\n      toast.error(\"Fail\");\r\n    }\r\n  }, [isError, isUninitialized]);\r\n\r\n  useEffect(() => {\r\n    if (!isUninitialized && isSuccess) {\r\n      toast.success(\"Success\");\r\n    }\r\n  }, [isSuccess, isUninitialized]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Register</h1>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{ span: 4 }}\r\n        style={{ width: \"100%\" }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: \"\" },\r\n            {\r\n              validator: async (_, names) => {\r\n                if (!names) {\r\n                  return Promise.reject(\r\n                    new Error(\"Please input your username!\")\r\n                  );\r\n                } else if (names.trim().length < 6) {\r\n                  return Promise.reject(\r\n                    new Error(\"Please input your username! (Min is 6)\")\r\n                  );\r\n                }\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            { required: true, message: \"\" },\r\n            {\r\n              validator: async (_, mail) => {\r\n                if (!mail) {\r\n                  return Promise.reject(new Error(\"Please input your mail!\"));\r\n                } else if (mail.trim().length < 8) {\r\n                  return Promise.reject(\r\n                    new Error(\"Please input your mail! (Min is 8)\")\r\n                  );\r\n                }\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: \"\" },\r\n            {\r\n              validator: async (_, password) => {\r\n                if (!password) {\r\n                  return Promise.reject(\r\n                    new Error(\"Please input your password!\")\r\n                  );\r\n                } else if (password.trim().length < 6) {\r\n                  return Promise.reject(\r\n                    new Error(\"Please input your password! (Min is 8)\")\r\n                  );\r\n                }\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 10, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import { Containers } from \"components/Containers/Container\";\r\nimport { RegisterForm } from \"components/Register/RegisterForm\";\r\n\r\nconst Register: React.FC = () => {\r\n  return (\r\n    <Containers>\r\n      <RegisterForm />\r\n    </Containers>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["Container","styled","section","_templateObject","_taggedTemplateLiteral","Containers","_ref","children","_jsx","RegisterForm","_useRegisterMutation","useRegisterMutation","_useRegisterMutation2","_slicedToArray","postRegister","_useRegisterMutation3","isUninitialized","isSuccess","isError","useEffect","toast","error","success","_jsxs","_Fragment","Form","name","labelCol","span","style","width","initialValues","remember","onFinish","values","Item","label","rules","required","message","validator","_validator","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","names","wrap","_context","prev","next","abrupt","Promise","reject","Error","trim","length","stop","_x","_x2","apply","arguments","Input","_validator2","_callee2","mail","_context2","_x3","_x4","_validator3","_callee3","password","_context3","_x5","_x6","Password","wrapperCol","offset","Button","type","htmlType","size"],"sourceRoot":""}